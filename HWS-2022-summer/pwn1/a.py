from Crypto.Util.number import bytes_to_long, long_to_bytes
from gmpy2 import invert

arr = [
	0x65C4934866354B3,
	0x242760A871C204C0,
	0x89C96DD9ECDBAF60,
	0x4D765C1FEAF881FC,
	0x9F1FA1C5B9BA5458,
	0xB18CAF560C33718C,
	0xDCC49B1D9A451AA,
	0x6581D94D7602785B,
	0xFCAF5FE8EA49E25F,
	0x6236F85D638381EF,
	0x55766B73F82B19E8,
	0xC82D675431D72415,
	0xD16F7C6A6054078B,
	0x2DDCBCF8259FD39C,
	0xE88A8699D6776433,
	0xFBD8A818116845A4
]

_n = 0
for i in range(len(arr)):
	_n |= arr[i] << (64 * i)

_n = bytes_to_long(long_to_bytes(_n)[::-1])
print(hex(_n))


_n = 0xb354638634495c06c004c271a860272460afdbecd96dc989fc81f8ea1f5c764d5854bab9c5a11f9f8c71330c56af8cb1aa51a4d9b149cc0d5b7802764dd981655fe249eae85faffcef8183635df83662e8192bf8736b76551524d73154672dc88b0754606a7c6fd19cd39f25f8bcdc2d336477d699868ae8a445681118a8d8fb
# 125929558285838122981938793459630773025162920525251356687688812999666759615921050359414338068063425479948010539252026365977707361962932013049637097311291763866352503104013778306176776110733239343100098577761198501786979178603002524323658920750922477495615561099575287665110734080670065963391590988989914994939
# http://factordb.com/index.php?query=125929558285838122981938793459630773025162920525251356687688812999666759615921050359414338068063425479948010539252026365977707361962932013049637097311291763866352503104013778306176776110733239343100098577761198501786979178603002524323658920750922477495615561099575287665110734080670065963391590988989914994939

_p = 16617127
_q = 7578299081774973675168926220497127633745768478826174746554492422165802765780212810518589529228694315205511189705177457329278843566817056465274478392762585485827514172817826950842752547461016536920016232514874472692360067934908514830732106744500567245807025552586514363470336002166323093239378322678157
# fully factored

_e = 0x10001
_phi = (_p - 1) * (_q - 1)
_d = int(invert(_e, _phi))
assert _d * _e % _phi == 1

def encrypt(s):
	_m = bytes_to_long(s)
	_c = pow(_m, _d, _n)
	return long_to_bytes(_c)

def decrypt(s):
	_c = bytes_to_long(s)
	return long_to_bytes(pow(_c, _e, _n))